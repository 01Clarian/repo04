{"ast":null,"code":"var _jsxFileName = \"/Users/mauriceknecht/Desktop/preredux 3/src/App.js\";\nimport React, { Component } from 'react';\nimport Searchbox from './Searchbox';\nimport Cardlist from './Cardlist';\nimport Scrollview from './Scrollview';\nimport Cardlist2 from './Cardlist2';\nconst urls = [\"https://swapi.co/api/people\", \"https://swapi.co/api/people?page=2\", \"https://swapi.co/api/people?page=3\", \"https://swapi.co/api/people?page=4\"];\nconst urls2 = [\"https://swapi.co/api/planets\", \"https://swapi.co/api/planets?page=2\", \"https://swapi.co/api/planets?page=3\", \"https://swapi.co/api/planets?page=4\"]; //async test exercise\n\nasync function fetchAll() {\n  const results = await Promise.all(urls.map(url => fetch(url).then(r => r.json())));\n  console.log(JSON.stringify(results, null, 2));\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.fetchData = () => {\n      Promise.all(urls.map(url => fetch(url).then(people => people.json()).then(people => people.results))).then(users => this.setState({\n        robots: [].concat(...users)\n      })).catch(error => {\n        console.log(error, \"catch the hoop\");\n      });\n    };\n\n    this.fetchData2 = () => {\n      Promise.all(urls2.map(url => fetch(url).then(planets => planets.json()).then(results => results.results))).then(planets => this.setState({\n        planetsList: [].concat(...planets)\n      })).catch(error => {\n        console.log(error, \"catch the hoop\");\n      });\n    };\n\n    this.onSearchChage = event => {\n      this.setState({\n        searchfield: event.target.value\n      });\n    };\n\n    this.state = {\n      planetsList: [],\n      robots: [],\n      searchfield: \"\",\n      isHidden: true\n    };\n  }\n\n  toggleHidden() {\n    this.setState({\n      isHidden: !this.state.isHidden\n    });\n  }\n\n  componentDidMount() {\n    this.fetchData();\n    this.fetchData2();\n    fetchAll();\n  }\n\n  render() {\n    const filteredRobots = this.state.robots.filter(robot => {\n      return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n    });\n    const filteredPlanets = this.state.planetsList.filter(planet => {\n      return planet.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n    });\n    return React.createElement(\"div\", {\n      className: \"tc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Star Wars\"), React.createElement(Searchbox, {\n      searchChange: this.onSearchChage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(Scrollview, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.toggleHidden.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"People\"), React.createElement(\"button\", {\n      onClick: this.toggleHidden.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Planets\"), !this.state.isHidden && React.createElement(Cardlist2, {\n      planetsList: filteredPlanets,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }) && !this.state.isHidden && React.createElement(Cardlist, {\n      robots: filteredRobots,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })));\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/mauriceknecht/Desktop/preredux 3/src/App.js"],"names":["React","Component","Searchbox","Cardlist","Scrollview","Cardlist2","urls","urls2","fetchAll","results","Promise","all","map","url","fetch","then","r","json","console","log","JSON","stringify","App","constructor","fetchData","people","users","setState","robots","concat","catch","error","fetchData2","planets","planetsList","onSearchChage","event","searchfield","target","value","state","isHidden","toggleHidden","componentDidMount","render","filteredRobots","filter","robot","name","toLowerCase","includes","filteredPlanets","planet","bind"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Searchbox from './Searchbox';\nimport Cardlist from './Cardlist';\nimport Scrollview from './Scrollview';\nimport Cardlist2 from './Cardlist2';\n\nconst urls = [\"https://swapi.co/api/people\",\n              \"https://swapi.co/api/people?page=2\",\n              \"https://swapi.co/api/people?page=3\",\n              \"https://swapi.co/api/people?page=4\" ]\n\n  const urls2 = [\"https://swapi.co/api/planets\",\n  \"https://swapi.co/api/planets?page=2\",\n  \"https://swapi.co/api/planets?page=3\",\n  \"https://swapi.co/api/planets?page=4\" ]\n\n  //async test exercise\nasync function fetchAll() {\n  const results = await Promise.all(urls.map((url) => fetch(url).then((r) => r.json())));\n  console.log(JSON.stringify(results, null, 2));\n    }\n\nclass App extends Component {\n    constructor() {\n      super()\n      this.state= {\n        planetsList:[],\n        robots:[],\n        searchfield:\"\",\n        isHidden: true\n      }\n    }\n    toggleHidden () {\n      this.setState({\n        isHidden: !this.state.isHidden\n      })\n    }\n\n\nfetchData = () => {\n  Promise.all(urls.map(url =>\n    fetch(url).then(people => people.json())\n    .then(people => people.results)\n))\n  .then(users => this.setState({robots:[].concat(...users)} ))\n  .catch((error) => {\n    console.log(error, \"catch the hoop\")\n  })\n}\n\nfetchData2 = () => {\n  Promise.all(urls2.map(url =>\n    fetch(url).then(planets => planets.json())\n    .then(results => results.results)\n))\n  .then(planets => this.setState({planetsList:[].concat(...planets)} ))\n  .catch((error) => {\n    console.log(error, \"catch the hoop\")\n  })\n}\n\n    componentDidMount() {\n\n  this.fetchData();\n  this.fetchData2();\n  fetchAll();\n\n\n}\n\nonSearchChage = (event) => {\n  this.setState({searchfield: event.target.value})\n  \n  }\n  \nrender () {\n  const filteredRobots = this.state.robots.filter(robot => {\n    return (robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\n    )});\n    const filteredPlanets = this.state.planetsList.filter(planet => {\n      return (planet.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\n      );\n\n  })\n  return ( \n  <div className=\"tc\">\n  <h1>Star Wars</h1>\n  <Searchbox searchChange={this.onSearchChage} />\n  <p></p>\n  <Scrollview>\n\n  <button onClick={this.toggleHidden.bind(this)} >\n          People\n        </button>\n        <button onClick={this.toggleHidden.bind(this)} >\n          Planets\n        </button>\n        {!this.state.isHidden && <Cardlist2 planetsList={filteredPlanets} /> \n        && !this.state.isHidden && <Cardlist robots={filteredRobots} />} \n\n\n\n\n </Scrollview>\n  </div>\n  )\n  }\n};\nexport default App"]},"metadata":{},"sourceType":"module"}