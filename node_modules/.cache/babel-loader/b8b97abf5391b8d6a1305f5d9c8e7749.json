{"ast":null,"code":"var _jsxFileName = \"/Users/mauriceknecht/Desktop/preredux 3/src/App.js\";\nimport React, { Component } from 'react';\nimport Searchbox from './Searchbox';\nimport Cardlist from './Cardlist';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.fetchData = () => {\n      fetch(\"https://swapi.co/api/people\").then(response => response.json()).then(users => this.setState({\n        robots: users.results\n      })).catch(error => {\n        console.log(error, \"catch the hoop\");\n      });\n    };\n\n    this.onSearchChage = event => {\n      this.setState({\n        searchfield: event.target.value\n      });\n    };\n\n    this.state = {\n      robots: [],\n      searchfield: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  render() {\n    const filteredRobots = this.state.robots.filter(robot => {\n      return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n    });\n    return React.createElement(\"div\", {\n      className: \"tc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Robo Friends\"), React.createElement(Searchbox, {\n      searchChange: this.onSearchChage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(Cardlist, {\n      robots: filteredRobots,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/mauriceknecht/Desktop/preredux 3/src/App.js"],"names":["React","Component","Searchbox","Cardlist","App","constructor","fetchData","fetch","then","response","json","users","setState","robots","results","catch","error","console","log","onSearchChage","event","searchfield","target","value","state","componentDidMount","render","filteredRobots","filter","robot","name","toLowerCase","includes"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAGA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AACxBI,EAAAA,WAAW,GAAG;AACZ;;AADY,SAQlBC,SARkB,GAQN,MAAM;AAChBC,MAAAA,KAAK,CAAC,6BAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,KAAK,IAAG,KAAKC,QAAL,CAAc;AAACC,QAAAA,MAAM,EAACF,KAAK,CAACG;AAAd,OAAd,CAFd,EAGCC,KAHD,CAGQC,KAAD,IAAW;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAAmB,gBAAnB;AACD,OALD;AAMD,KAfiB;;AAAA,SAuBlBG,aAvBkB,GAuBDC,KAAD,IAAW;AACzB,WAAKR,QAAL,CAAc;AAACS,QAAAA,WAAW,EAAED,KAAK,CAACE,MAAN,CAAaC;AAA3B,OAAd;AAEC,KA1Be;;AAEZ,SAAKC,KAAL,GAAY;AACVX,MAAAA,MAAM,EAAC,EADG;AAEVQ,MAAAA,WAAW,EAAC;AAFF,KAAZ;AAID;;AAWDI,EAAAA,iBAAiB,GAAG;AAEtB,SAAKnB,SAAL;AAED;;AAODoB,EAAAA,MAAM,GAAI;AACR,UAAMC,cAAc,GAAG,KAAKH,KAAL,CAAWX,MAAX,CAAkBe,MAAlB,CAAyBC,KAAK,IAAI;AACvD,aAAQA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkC,KAAKR,KAAL,CAAWH,WAAX,CAAuBU,WAAvB,EAAlC,CAAR;AAED,KAHsB,CAAvB;AAIA,WACA;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,EAEA,oBAAC,SAAD;AAAW,MAAA,YAAY,EAAE,KAAKZ,aAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAGA,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAEQ,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,CADA;AAOC;;AAzCyB;;AA0C3B;AACD,eAAevB,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport Searchbox from './Searchbox';\nimport Cardlist from './Cardlist';\n\n\nclass App extends Component {\n    constructor() {\n      super()\n      this.state= {\n        robots:[],\n        searchfield:\"\"\n      }\n    }\n\nfetchData = () => {\n  fetch(\"https://swapi.co/api/people\")\n  .then(response => response.json())\n  .then(users=> this.setState({robots:users.results}))\n  .catch((error) => {\n    console.log(error, \"catch the hoop\")\n  })\n}\n\n    componentDidMount() {\n\n  this.fetchData();\n\n}\n\nonSearchChage = (event) => {\n  this.setState({searchfield: event.target.value})\n  \n  }\n  \nrender () {\n  const filteredRobots = this.state.robots.filter(robot => {\n    return (robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\n    );\n  })\n  return ( \n  <div className=\"tc\">\n  <h1>Robo Friends</h1>\n  <Searchbox searchChange={this.onSearchChage} />\n  <Cardlist robots={filteredRobots} /> \n  </div>\n  )\n  }\n};\nexport default App"]},"metadata":{},"sourceType":"module"}