{"ast":null,"code":"import { CHANGE_SEARCH_FIELD, TOGGLE_HIDDEN, REQUEST_PEOPLE_PENDING, REQUEST_PEOPLE_SUCCESS, REQUEST_PEOPLE_FAILED, REQUEST_PLANETS_PENDING, REQUEST_PLANETS_SUCCESS, REQUEST_PLANETS_FAILED, REQUEST_STARSHIPS_PENDING, REQUEST_STARSHIPS_SUCCESS, REQUEST_STARSHIPS_FAILED } from './constants'; //not sure how to input toggle mode correctly through \n//actions and reducers - \n\nexport const setToggleHidden = value => dispatch => {\n  dispatch({\n    type: TOGGLE_HIDDEN\n  });\n  dispatch({\n    payload: value\n  });\n};\nexport const setSearchField = text => ({\n  type: CHANGE_SEARCH_FIELD,\n  payload: text\n});\nconst urls = [\"https://swapi.co/api/people\", \"https://swapi.co/api/people?page=2\", \"https://swapi.co/api/people?page=3\", \"https://swapi.co/api/people?page=4\"];\nconst urls2 = [\"https://swapi.co/api/planets\", \"https://swapi.co/api/planets?page=2\", \"https://swapi.co/api/planets?page=3\", \"https://swapi.co/api/planets?page=4\"];\nconst urls3 = [\"https://swapi.co/api/starships\", \"https://swapi.co/api/starships?page=2\", \"https://swapi.co/api/starships?page=3\", \"https://swapi.co/api/starships?page=4\"];\nexport const requestPeople = () => dispatch => {\n  dispatch({\n    type: REQUEST_PEOPLE_PENDING\n  });\n  Promise.all(urls.map(url => fetch(url).then(resp => resp.json()).then(people => people.results))).then(data => dispatch({\n    type: REQUEST_PEOPLE_SUCCESS,\n    payload: [].concat(...data)\n  })).catch(error => dispatch({\n    type: REQUEST_PEOPLE_FAILED,\n    payload: error\n  }));\n};\nexport const requestPlanets = () => dispatch => {\n  dispatch({\n    type: REQUEST_PLANETS_PENDING\n  });\n  Promise.all(urls2.map(url => fetch(url).then(resp => resp.json()).then(planets => planets.results))).then(data => dispatch({\n    type: REQUEST_PLANETS_SUCCESS,\n    payload: [].concat(...data)\n  })).catch(error => dispatch({\n    type: REQUEST_PLANETS_FAILED,\n    payload: error\n  }));\n};\nexport const requestStarships = () => dispatch => {\n  dispatch({\n    type: REQUEST_STARSHIPS_PENDING\n  });\n  Promise.all(urls3.map(url => fetch(url).then(resp => resp.json()).then(starships => starships.results))).then(data => dispatch({\n    type: REQUEST_STARSHIPS_SUCCESS,\n    payload: [].concat(...data)\n  })).catch(error => dispatch({\n    type: REQUEST_STARSHIPS_FAILED,\n    payload: error\n  }));\n};","map":{"version":3,"sources":["/Users/mauriceknecht/Desktop/preredux 4/src/actions.js"],"names":["CHANGE_SEARCH_FIELD","TOGGLE_HIDDEN","REQUEST_PEOPLE_PENDING","REQUEST_PEOPLE_SUCCESS","REQUEST_PEOPLE_FAILED","REQUEST_PLANETS_PENDING","REQUEST_PLANETS_SUCCESS","REQUEST_PLANETS_FAILED","REQUEST_STARSHIPS_PENDING","REQUEST_STARSHIPS_SUCCESS","REQUEST_STARSHIPS_FAILED","setToggleHidden","value","dispatch","type","payload","setSearchField","text","urls","urls2","urls3","requestPeople","Promise","all","map","url","fetch","then","resp","json","people","results","data","concat","catch","error","requestPlanets","planets","requestStarships","starships"],"mappings":"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","sourcesContent":["import {CHANGE_SEARCH_FIELD,\n    TOGGLE_HIDDEN,\n    REQUEST_PEOPLE_PENDING,\n    REQUEST_PEOPLE_SUCCESS,\n    REQUEST_PEOPLE_FAILED,\n    REQUEST_PLANETS_PENDING,\n    REQUEST_PLANETS_SUCCESS,\n    REQUEST_PLANETS_FAILED,\n    REQUEST_STARSHIPS_PENDING,\n    REQUEST_STARSHIPS_SUCCESS,\n    REQUEST_STARSHIPS_FAILED} from './constants'\n\n    //not sure how to input toggle mode correctly through \n    //actions and reducers - \n\nexport const setToggleHidden = (value) => (dispatch) => {\n  dispatch({type:TOGGLE_HIDDEN})\n  dispatch({payload:value})\n}\n\nexport const setSearchField = (text) => ({\ntype:CHANGE_SEARCH_FIELD,\npayload:text\n})\n\nconst urls = \n [\"https://swapi.co/api/people\",\n  \"https://swapi.co/api/people?page=2\",\n  \"https://swapi.co/api/people?page=3\",\n  \"https://swapi.co/api/people?page=4\" ]\n\n  const urls2 = \n  [\"https://swapi.co/api/planets\",\n  \"https://swapi.co/api/planets?page=2\",\n  \"https://swapi.co/api/planets?page=3\",\n  \"https://swapi.co/api/planets?page=4\" ]\n  \n  const urls3 = \n  [\"https://swapi.co/api/starships\",\n  \"https://swapi.co/api/starships?page=2\",\n  \"https://swapi.co/api/starships?page=3\",\n  \"https://swapi.co/api/starships?page=4\" ]  \n\n\nexport const requestPeople = () => (dispatch) => {\ndispatch({type:REQUEST_PEOPLE_PENDING})\n  Promise.all(urls.map(url =>\n    fetch(url).then(resp => resp.json())\n    .then(people => people.results)\n))\n.then(data => dispatch({type:REQUEST_PEOPLE_SUCCESS, payload:[].concat(...data)}))\n.catch(error => dispatch({type:REQUEST_PEOPLE_FAILED, payload:error}))    \n}\n\nexport const requestPlanets = () => (dispatch) => {\n    dispatch({type:REQUEST_PLANETS_PENDING})\n      Promise.all(urls2.map(url =>\n        fetch(url).then(resp => resp.json())\n        .then(planets => planets.results)\n    ))\n    .then(data => dispatch({type:REQUEST_PLANETS_SUCCESS, payload:[].concat(...data)}))\n    .catch(error => dispatch({type:REQUEST_PLANETS_FAILED, payload:error}))    \n    }\n\n    export const requestStarships = () => (dispatch) => {\n        dispatch({type:REQUEST_STARSHIPS_PENDING})\n          Promise.all(urls3.map(url =>\n            fetch(url).then(resp => resp.json())\n            .then(starships => starships.results)\n        ))\n        .then(data => dispatch({type:REQUEST_STARSHIPS_SUCCESS, payload:[].concat(...data)}))\n        .catch(error => dispatch({type:REQUEST_STARSHIPS_FAILED, payload:error}))    \n        }"]},"metadata":{},"sourceType":"module"}