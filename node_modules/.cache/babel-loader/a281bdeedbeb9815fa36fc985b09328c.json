{"ast":null,"code":"var _jsxFileName = \"/Users/mauriceknecht/Desktop/preredux 4/src/Containers/App.js\";\nimport React, { Component } from 'react';\nimport Searchbox from '../Components/Searchbox';\nimport Cardlist from '../Components/Cardlist';\nimport Scrollview from '../Components/Scrollview';\nimport Cardlist2 from '../Components/Cardlist2';\nimport Cardlist3 from '../Components/Cardlist3';\nimport './App.css';\nimport swdb from '../Media/swdb.png';\nimport { setSearchField, requestPeople, requestStarships, requestPlanets } from '../actions';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchPeople.searchField,\n    peopleList: state.requestPeople.peopleList,\n    planetsList: state.requestPlanets.planetsList,\n    starshipsList: state.requestStarships.starshipsList,\n    error: state.requestPeople.error,\n    isPending: state.requestPeople.isPending\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSearchChage: event => dispatch(setSearchField(event.target.value)),\n    onRequestPeople: () => dispatch(requestPeople()),\n    onRequestPlanets: () => dispatch(requestPlanets()),\n    onRequestStarships: () => dispatch(requestStarships())\n  };\n}; //async test exercise **kept it in here for posterity**\n//async function fetchAll() {\n//  const results = await Promise.all(urls.map((url) => fetch(url).then((r) => r.json())));\n//  console.log(JSON.stringify(results, null, 2));\n//    }\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isHidden: true,\n      isHidden2: true,\n      isHidden3: true\n    };\n  }\n\n  toggleHidden() {\n    this.setState({\n      isHidden: !this.state.isHidden\n    });\n  }\n\n  toggleHidden2() {\n    this.setState({\n      isHidden2: !this.state.isHidden2\n    });\n  }\n\n  toggleHidden3() {\n    this.setState({\n      isHidden3: !this.state.isHidden3\n    });\n  }\n\n  componentDidMount() {\n    this.props.onRequestPeople();\n    this.props.onRequestPlanets();\n    this.props.onRequestStarships();\n  }\n\n  render() {\n    const _this$props = this.props,\n          searchField = _this$props.searchField,\n          onSearchChage = _this$props.onSearchChage,\n          isPending = _this$props.isPending,\n          peopleList = _this$props.peopleList,\n          planetsList = _this$props.planetsList,\n          starshipsList = _this$props.starshipsList;\n    const filteredPeople = peopleList.filter(person => {\n      return person.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n    const filteredPlanets = planetsList.filter(planet => {\n      return planet.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n    const filteredStarships = starshipsList.filter(planet => {\n      return planet.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n    return isPending ? React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"LOADING\") : React.createElement(\"div\", {\n      className: \"stars\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"twinkling\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"clouds\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: swdb,\n      opacity: \"0.3\",\n      height: \"100px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(Searchbox, {\n      searchChange: onSearchChage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      id: \"here\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \" Please click buttons twice to reset due to novice react coding methods. \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      id: \"peoplebtn\",\n      disabled: this.isHidden,\n      onClick: this.toggleHidden.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"People\"), React.createElement(\"button\", {\n      id: \"planetbtn\",\n      onClick: this.toggleHidden2.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Planets\"), React.createElement(\"button\", {\n      id: \"starshipbtn\",\n      onClick: this.toggleHidden3.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Starships\"), React.createElement(Scrollview, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, !this.state.isHidden3 && React.createElement(Cardlist3, {\n      starshipList: filteredStarships,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), !this.state.isHidden2 && React.createElement(Cardlist2, {\n      planetsList: filteredPlanets,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), !this.state.isHidden && React.createElement(Cardlist, {\n      peopleList: filteredPeople,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\n;\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/mauriceknecht/Desktop/preredux 4/src/Containers/App.js"],"names":["React","Component","Searchbox","Cardlist","Scrollview","Cardlist2","Cardlist3","swdb","setSearchField","requestPeople","requestStarships","requestPlanets","connect","mapStateToProps","state","searchField","searchPeople","peopleList","planetsList","starshipsList","error","isPending","mapDispatchToProps","dispatch","onSearchChage","event","target","value","onRequestPeople","onRequestPlanets","onRequestStarships","App","constructor","isHidden","isHidden2","isHidden3","toggleHidden","setState","toggleHidden2","toggleHidden3","componentDidMount","props","render","filteredPeople","filter","person","name","toLowerCase","includes","filteredPlanets","planet","filteredStarships","bind"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Searchbox from '../Components/Searchbox';\nimport Cardlist from '../Components/Cardlist';\nimport Scrollview from '../Components/Scrollview';\nimport Cardlist2 from '../Components/Cardlist2';\nimport Cardlist3 from '../Components/Cardlist3';\nimport './App.css'\nimport swdb from '../Media/swdb.png'\nimport {setSearchField, requestPeople, requestStarships, requestPlanets} from '../actions'\nimport {connect} from 'react-redux'\n\n\nconst mapStateToProps = (state) => {\n  return {\n      searchField: state.searchPeople.searchField,\n      peopleList: state.requestPeople.peopleList,\n      planetsList: state.requestPlanets.planetsList,\n      starshipsList: state.requestStarships.starshipsList,\n      error: state.requestPeople.error,\n      isPending: state.requestPeople.isPending\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\nreturn {\n  onSearchChage: (event) => dispatch(setSearchField(event.target.value)),\n  onRequestPeople: () => dispatch(requestPeople()),\n  onRequestPlanets: () => dispatch(requestPlanets()),\n  onRequestStarships: () => dispatch(requestStarships())\n}\n}\n\n//async test exercise **kept it in here for posterity**\n//async function fetchAll() {\n//  const results = await Promise.all(urls.map((url) => fetch(url).then((r) => r.json())));\n//  console.log(JSON.stringify(results, null, 2));\n//    }\n\nclass App extends Component {\n    constructor() {\n      super()\n      this.state= {\n        isHidden: true,\n        isHidden2: true,\n        isHidden3: true,\n        \n      }\n      \n    }\n\n    toggleHidden () {\n      this.setState({\n        isHidden: !this.state.isHidden\n      })\n    }\n\n    toggleHidden2 () {\n      this.setState({\n        isHidden2: !this.state.isHidden2\n      })\n    }\n\n    toggleHidden3 () {\n      this.setState({\n        isHidden3: !this.state.isHidden3\n      })\n    }\n\n\n   componentDidMount() {\n    this.props.onRequestPeople();\n    this.props.onRequestPlanets();\n    this.props.onRequestStarships();\n}\n  \nrender () {\n  const {searchField, onSearchChage, isPending, peopleList, planetsList, starshipsList} = this.props;\n  const filteredPeople = peopleList.filter(person => {\n    return (person.name.toLowerCase().includes(searchField.toLowerCase())\n    )});\n    const filteredPlanets = planetsList.filter(planet => {\n      return (planet.name.toLowerCase().includes(searchField.toLowerCase())\n      )});\n      const filteredStarships = starshipsList.filter(planet => {\n        return (planet.name.toLowerCase().includes(searchField.toLowerCase())\n        )});\n  \n  return isPending ?\n  <h2>LOADING</h2> :\n  ( \n    <div className=\"stars\">\n<div className=\"twinkling\">\n<div className=\"clouds\">\n  <div className=\"tc\">\n  <h1><img src={swdb}  opacity=\"0.3\" height=\"100px\" /></h1>\n  <br></br>\n          \n  <Searchbox searchChange={onSearchChage} />\n  <p id=\"here\"> Please click buttons twice to reset due to novice react coding methods. </p>\n  <br></br>\n  <button id=\"peoplebtn\" disabled={this.isHidden} onClick={this.toggleHidden.bind(this)} >\n          People\n        </button>\n        <button id=\"planetbtn\" onClick={this.toggleHidden2.bind(this)} >\n          Planets\n        </button>\n        <button id=\"starshipbtn\" onClick={this.toggleHidden3.bind(this)} >\n          Starships\n        </button>\n  <Scrollview\n  >\n           {!this.state.isHidden3 && <Cardlist3 starshipList={filteredStarships} />}\n           {!this.state.isHidden2 && <Cardlist2 planetsList={filteredPlanets} />} \n           {!this.state.isHidden && <Cardlist peopleList={filteredPeople} />} \n \n\n </Scrollview>\n  </div>\n  </div>\n  </div>\n  </div>\n  )\n  }\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App)"]},"metadata":{},"sourceType":"module"}